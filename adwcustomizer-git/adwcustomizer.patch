diff --git a/src/main.py b/src/main.py
index 8aadfe0..d69eb3d 100644
--- a/src/main.py
+++ b/src/main.py
@@ -113,7 +113,7 @@ class AdwcustomizerApplication(Adw.Application):
         self.custom_css_group.load_custom_css(self.custom_css)
         win.content.add(self.custom_css_group)
 
-        preset_directory = os.path.join(os.environ['XDG_CONFIG_HOME'], "presets")
+        preset_directory = os.path.join(os.environ['HOME'], ".config/presets")
         if not os.path.exists(preset_directory):
             os.makedirs(preset_directory)
 
@@ -127,10 +127,10 @@ class AdwcustomizerApplication(Adw.Application):
         self.create_action("about", self.show_about_window)
 
         self.custom_presets = {}
-        for file_name in os.listdir(os.environ['XDG_CONFIG_HOME'] + "/presets/"):
+        for file_name in os.listdir(os.environ['HOME'] + "/.config/presets/"):
             if file_name.endswith(".json"):
                 try:
-                    with open(os.environ['XDG_CONFIG_HOME'] + "/presets/" + file_name, 'r') as file:
+                    with open(os.environ['HOME'] + "/.config/presets/" + file_name, 'r') as file:
                         preset_text = file.read()
                     preset = json.loads(preset_text)
                     if preset.get('variables') is None:
@@ -171,7 +171,7 @@ class AdwcustomizerApplication(Adw.Application):
             self.portal.open_uri_finish(result)
         self.portal.open_uri(
             parent,
-            "file://" + os.environ['XDG_CONFIG_HOME'] + "/presets/",
+            "file://" + os.environ['HOME'] + "/.config/presets/",
             Xdp.OpenUriFlags.NONE,
             None,
             open_dir_callback
@@ -240,7 +240,7 @@ class AdwcustomizerApplication(Adw.Application):
 
     def load_preset_action(self, _unused, *args):
         if args[0].get_string().startswith("custom-"):
-            self.load_preset_from_file(os.environ['XDG_CONFIG_HOME'] + "/presets/" + args[0].get_string().replace("custom-", "", 1) + ".json")
+            self.load_preset_from_file(os.environ['HOME'] + "/.config/presets/" + args[0].get_string().replace("custom-", "", 1) + ".json")
         else:
             self.load_preset_from_resource('/com/github/ArtyIF/AdwCustomizer/presets/' + args[0].get_string() + '.json')
         Gio.SimpleAction.set_state(self.lookup_action("load_preset"), args[0])
@@ -264,7 +264,7 @@ class AdwcustomizerApplication(Adw.Application):
     def show_save_preset_dialog(self, *_args):
         dialog = Adw.MessageDialog(transient_for=self.props.active_window,
                                    heading=_("Save preset as..."),
-                                   body=_("Saving preset to <tt>{0}</tt>. If that preset already exists, it will be overwritten!").format(os.environ['XDG_CONFIG_HOME'] + "/presets/"),
+                                   body=_("Saving preset to <tt>{0}</tt>. If that preset already exists, it will be overwritten!").format(os.environ['HOME'] + "/.config/presets/"),
                                    body_use_markup=True)
 
         dialog.add_response("cancel", _("Cancel"))
@@ -277,10 +277,10 @@ class AdwcustomizerApplication(Adw.Application):
         preset_entry = Gtk.Entry(placeholder_text="Preset Name")
         def on_preset_entry_change(*_args):
             if len(preset_entry.get_text()) == 0:
-                dialog.set_body(_("Saving preset to <tt>{0}</tt>. If that preset already exists, it will be overwritten!").format(os.environ['XDG_CONFIG_HOME'] + "/presets/"))
+                dialog.set_body(_("Saving preset to <tt>{0}</tt>. If that preset already exists, it will be overwritten!").format(os.environ['HOME'] + "/.config/presets/"))
                 dialog.set_response_enabled("save", False)
             else:
-                dialog.set_body(_("Saving preset to <tt>{0}</tt>. If that preset already exists, it will be overwritten!").format(os.environ['XDG_CONFIG_HOME'] + "/presets/" + to_slug_case(preset_entry.get_text()) + ".json"))
+                dialog.set_body(_("Saving preset to <tt>{0}</tt>. If that preset already exists, it will be overwritten!").format(os.environ['HOME'] + "/.config/presets/" + to_slug_case(preset_entry.get_text()) + ".json"))
                 dialog.set_response_enabled("save", True)
         preset_entry.connect("changed", on_preset_entry_change)
         dialog.set_extra_child(preset_entry)
@@ -291,7 +291,7 @@ class AdwcustomizerApplication(Adw.Application):
 
     def save_preset(self, _unused, response, entry):
         if response == "save":
-            with open(os.environ['XDG_CONFIG_HOME'] + "/presets/" + to_slug_case(entry.get_text()) + ".json", 'w') as file:
+            with open(os.environ['HOME'] + "/.config/presets/" + to_slug_case(entry.get_text()) + ".json", 'w') as file:
                 object_to_write = {
                     "name": entry.get_text(),
                     "variables": self.variables,
@@ -304,11 +304,11 @@ class AdwcustomizerApplication(Adw.Application):
         if response == "apply":
             if widget.get_app_types()["gtk4"]:
                 gtk4_css = self.generate_gtk_css("gtk4")
-                with open(os.environ['XDG_CONFIG_HOME'] + "/gtk-4.0/gtk.css", 'w') as file:
+                with open(os.environ['HOME'] + "/.config/gtk-4.0/gtk.css", 'w') as file:
                     file.write(gtk4_css)
             if widget.get_app_types()["gtk3"]:
                 gtk3_css = self.generate_gtk_css("gtk3")
-                with open(os.environ['XDG_CONFIG_HOME'] + "/gtk-3.0/gtk.css", 'w') as file:
+                with open(os.environ['HOME'] + "/.config/gtk-3.0/gtk.css", 'w') as file:
                     file.write(gtk3_css)
 
     def reset_color_scheme(self, widget, response):
